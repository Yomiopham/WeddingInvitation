import { ArrayRga, ArrayChunk } from '../../../types/rga-array/ArrayRga';
import { BinaryRga, BinaryChunk } from '../../../types/rga-binary/BinaryRga';
import { ClockEncoder } from '../../../../json-crdt-patch/codec/clock/ClockEncoder';
import { Const } from '../../../types/const/Const';
import { RootLww } from '../../../types/lww-root/RootLww';
import { ITimestampStruct } from '../../../../json-crdt-patch/clock';
import { JsonNode } from '../../../types';
import { ObjectLww } from '../../../types/lww-object/ObjectLww';
import { StringRga, StringChunk } from '../../../types/rga-string/StringRga';
import { ValueLww } from '../../../types/lww-value/ValueLww';
import type { Model } from '../../../model';
import { ArrayLww } from '../../../types/lww-array/ArrayLww';
export declare class Encoder {
    protected time?: number;
    protected clock?: ClockEncoder;
    protected model: Model;
    encode(model: Model): unknown[];
    protected ts(arr: unknown[], ts: ITimestampStruct): void;
    protected encodeRoot(arr: unknown[], root: RootLww): void;
    protected cNode(arr: unknown[], node: JsonNode): void;
    protected encodeObj(arr: unknown[], obj: ObjectLww): void;
    protected cTup(arr: unknown[], obj: ArrayLww): void;
    protected encodeArr(arr: unknown[], obj: ArrayRga): void;
    protected encodeArrChunk(arr: unknown[], chunk: ArrayChunk): void;
    protected encodeStr(arr: unknown[], obj: StringRga): void;
    protected encodeStrChunk(arr: unknown[], chunk: StringChunk): void;
    protected encodeBin(arr: unknown[], obj: BinaryRga): void;
    protected encodeBinChunk(arr: unknown[], chunk: BinaryChunk): void;
    protected cVal(arr: unknown[], obj: ValueLww): void;
    protected cConst(arr: unknown[], obj: Const): void;
}
